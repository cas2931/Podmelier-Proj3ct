{"version":3,"sources":["components/SignupForm/index.js","components/LoginForm/index.js","utils/LNAPI.js","components/ListenNoteContainer/index.js","pages/Home.js","pages/User.js","components/TopNav.js","App.js","registerServiceWorker.js","index.js"],"names":["SignupForm","state","email","password","handleSignUp","_callee","_this$state","_yield$Axios$post","regenerator_default","a","wrap","_context","prev","next","_this","Axios","post","sent","data","props","history","push","stop","handleChange","e","setState","Object","defineProperty","target","name","value","react_default","createElement","Grid","container","spacing","direction","alignContent","alignItems","justify","style","minHeight","Typography","component","variant","color","align","TextField","backgroundColor","margin","label","type","fullWidth","this","onChange","Button","onClick","React","Component","withRouter","LoginForm","handleLogin","LNAPI","axios","get","headers","X-ListenAPI-Key","process","id","ListenNoteContainer","genres","podcasts","handleInputChange","event","search","handleFormSubmit","preventDefault","_this2","then","_ref","asyncToGenerator","mark","res","promises","console","log","map","genre","Promise","all","_x","apply","arguments","catch","err","error","display","flexWrap","justifyContent","overflow","_ref2","GridList","cols","cellHeight","podcast","GridListTile","key","thumbnail","transform","src","alt","title","GridListTileBar","IconButton","aria-label","concat","react_tippy","description","position","trigger","InfoSharp_default","fontSize","CategorySharp_default","href","website","rel","WebSharp_default","Home","className","components_ListenNoteContainer","components_SignupForm","backgroundImage","width","backgroundPosition","backgroundSize","backgroundRepeat","components_LoginForm","User","handleLogOut","_yield$Axios$get","WebkitBackgroundSize","MozBackgroundSize","OBackgroundSize","handleTermChange","placeholder","height","TopNav","useLocation","App","react_router_dom","components_TopNav","react_router","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4e47f7b1.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SignupForm extends React.Component { \n  state= {\n    email:'', \n    password:''\n  } \n\n  handleSignUp = async () => {\n    const {email,password} =this.state\nconst{data}= await Axios.post('/api/auth/signup',{email,password})  \nthis.props.history.push('/')\n  }   \n\n  handleChange=(e) => { \n    this.setState({[e.target.name]:e.target.value})\n  }\n\n  render() {\n    return (\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignContent=\"center\"\n        alignItems=\"flex-start\"\n        justify=\"middle\"\n        style={{ minHeight: \"auto\" }}\n      >\n        <Typography\n          component=\"h1\"\n          variant=\"h5\"\n          color=\"secondary\"\n          align=\"center\"\n        >\n          Sign Up\n        </Typography> \n        \n          <TextField\n            style={{ backgroundColor: \"white\" }}\n            margin=\"normal\"\n            name=\"email\"\n            label=\"Email\"\n            variant=\"filled\"\n            type=\"text\" \n            fullWidth='true'  \n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <TextField\n            style={{ backgroundColor: \"white\" }}\n            margin=\"normal\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"text\"\n            variant=\"filled\" \n            fullWidth='true' \n            value={this.state.password} \n            onChange={this.handleChange}\n            \n          />\n          <Button onClick={this.handleSignUp} variant=\"contained\" color=\"secondary\">\n            Sign Up\n          </Button>\n    \n      </Grid>\n    );\n  }  \n}\nexport default withRouter(SignupForm)\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\"; \n// import { Redirect } from 'react-router-dom'\nimport Axios from 'axios'\nimport { withRouter } from \"react-router-dom\";\n\nclass LoginForm extends React.Component {\n    state= {\n      email:'', \n      password:''\n    } \n  \n    handleLogin = async () => {\n      const {email,password} =this.state\n  const{data}= await Axios.post('/api/auth/login',{email,password})   \n  this.props.history.push('/user')\n  // const res= await Axios.get('/api/auth/',) \n// console.log(res.data)\n    }   \n  \n    handleChange=(e) => { \n      this.setState({[e.target.name]:e.target.value})\n    }\n  \n    render() {\n      return (\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignContent=\"center\"\n          alignItems=\"flex-start\"\n          justify=\"middle\"\n          style={{ minHeight: \"auto\" }}\n        >\n          <Typography\n            component=\"h1\"\n            variant=\"h5\"\n            color=\"secondary\"\n            align=\"center\"\n          >\n            Login\n          </Typography> \n          \n            <TextField\n              style={{ backgroundColor: \"white\" }}\n              margin=\"normal\"\n              name=\"email\"\n              label=\"Email\"\n              variant=\"filled\"\n              type=\"text\" \n              fullWidth='true'  \n              value={this.state.email}\n              onChange={this.handleChange}\n            />\n            <TextField\n              style={{ backgroundColor: \"white\" }}\n              margin=\"normal\"\n              name=\"password\"\n              label=\"Password\"\n              type=\"text\"\n              variant=\"filled\" \n              fullWidth='true' \n              value={this.state.password} \n              onChange={this.handleChange}\n              \n            />\n            <Button onClick={this.handleLogin} variant=\"contained\" color=\"secondary\">\n              Login\n            </Button>\n      \n        </Grid>\n      );\n    }  \n  }\nexport default withRouter(LoginForm);\n","import axios from \"axios\";\n\nexport default {\n  getAllGenres: function () {\n    return axios.get(\n      \"https://listen-api.listennotes.com/api/v2/genres?top_level_only=1\",\n      {\n        headers: { \"X-ListenAPI-Key\": process.env.REACT_APP_LN_KEY },\n      }\n    );\n    // .header(process.env.REACT_APP_LN_KEY);\n  },\n  getTopLists: function (id) {\n    return axios.get(\n      \"https://listen-api.listennotes.com/api/v2/best_podcasts?genre_id=\" +\n        id +\n        \"&page=2&region=us&safe_mode=0\",\n      {\n        headers: { \"X-ListenAPI-Key\": process.env.REACT_APP_LN_KEY },\n      }\n    );\n    // .header(process.env.REACT_APP_LN_KEY);\n  },\n};\n// 21 Genres, GET /best_podcasts by genre\n","import React, { Component } from \"react\";\nimport LNAPI from \"../../utils/LNAPI\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InfoSharpIcon from \"@material-ui/icons/InfoSharp\";\nimport WebSharpIcon from \"@material-ui/icons/WebSharp\";\n\nimport CategorySharpIcon from '@material-ui/icons/CategorySharp';\nimport \"react-tippy/dist/tippy.css\";\nimport { Tooltip } from \"react-tippy\";\n\nclass ListenNoteContainer extends Component {\n  state = {\n    genres: [],\n    podcasts: [],\n  };\n\n  componentDidMount() {\n    LNAPI.getAllGenres()\n      .then(async (res) => {\n        console.log(res.data.genres);\n        const promises = res.data.genres.map((genre) => {\n          // genre.id;\n          return LNAPI.getTopLists(genre.id);\n        });\n        const podcasts = await Promise.all(promises);\n        console.log(podcasts);\n        this.setState({ podcasts });\n      })\n      .catch((err) => console.error(err));\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ search: event.target.value });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n          overflow: \"hidden\",\n        }}\n      >\n        {this.state.podcasts.map(({ data }) => {\n          return (\n            <GridList\n              flexWrap=\"nowrap\"\n              // transform=\"translateZ(0)\"\n              cols={5}\n              cellHeight={\"auto\"}\n            >\n              {data.podcasts.map((podcast) => (\n                <GridListTile key={podcast.thumbnail}>\n                  <img style={{transform:'translateY(0)'}}src={podcast.thumbnail} alt={podcast.title} />\n                  <GridListTileBar\n                    title={\n                      <IconButton aria-label={`star ${podcast.title}`}>  \n                        <Tooltip\n                          title={podcast.description}\n                          position=\"top\"\n                          trigger=\"click\">\n                          <InfoSharpIcon fontSize=\"large\" color=\"primary\" />\n                        </Tooltip> \n\n                        <Tooltip\n                          title={data.name}\n                          position=\"top\"\n                          trigger=\"click\"\n                        >\n                          <CategorySharpIcon style={{color:'green'}} fontSize=\"large\" />\n                        </Tooltip>\n\n                        <a\n                          href={podcast.website}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <WebSharpIcon fontSize=\"large\" color=\"secondary\" />\n                        </a> \n\n                        \n                      </IconButton>\n                    }\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          );\n        })}\n      </div>\n    );\n  }\n}\nexport default ListenNoteContainer;\n","import React from \"react\"; \nimport \"./home.css\";  \nimport SignupForm from '../components/SignupForm'; \nimport LoginForm from '../components/LoginForm';  \nimport ListenNoteContainer from '../components/ListenNoteContainer'\n\nfunction Home() {   \n\n  return (   \n<div>\n\n<div className=\"columns sticky-footer-css-body text-center\" style={{ overflow:'auto'}}>\n\n<ListenNoteContainer> </ListenNoteContainer>\n\n  </div> \n\n<div className=\"columns shrink sticky-footer text-center\" style={{backgroundColor: 'black'}}> \n  <div className=\"grid-x\"> \n\n     <div className=\"cell auto text-center\">\n         <SignupForm></SignupForm>\n    </div> \n\n    <div className=\"cell auto text-center\" style={{ backgroundColor: \"black\", \n        backgroundImage: \"url('../images/ListenNotes-non-white-background.png')\",\n        width: \"100%\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\", }}>\n      {/* <img src='./images/ListenNotes-non-white-background.png' alt='ListenNotes' top='0' bottom='0'/> */}\n    </div>\n\n    <div className=\"cell auto text-center\">\n         <LoginForm></LoginForm>\n    </div>\n  </div>\n</div>  \n\n</div> \n  ) \n}\nexport default Home;","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\"; \nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\"; \nimport Axios from 'axios'\n\n// import SpotifySearch from \"../components/SpotifySearch\";\n// import SpotifyResults from \"../components/SpotifyResults\";\n// import SPOTAPI from \"../utils/SPOTAPI\";\n// import SpotifyPlaylist from \"../components/SpotifyPlaylist\";\n\nclass User extends React.Component {\n \n  handleLogOut = async () => {\n   \nconst{data}= await Axios.get('/api/auth/logout')  \nthis.props.history.push('/')\n  }   \n\n  render() {\n    return (\n      <div>\n        <article\n          className=\"grid-container fluid\"\n          style={{\n            backgroundColor: \"darkred\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n            WebkitBackgroundSize: \"cover\",\n            MozBackgroundSize: \"cover\",\n            OBackgroundSize: \"cover\",\n          }}\n        >\n          <div\n            className=\"row\"\n            style={{\n              backgroundImage: \"url('./images/wood1-opt.jpg')\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              WebkitBackgroundSize: \"cover\",\n              MozBackgroundSize: \"cover\",\n              OBackgroundSize: \"cover\",\n            }}\n          >\n            <div className=\"grid-x align-center\">\n              <div className=\"cell medium-8 text-center\">\n                <Typography variant=\"h3\">Spotify Search</Typography>\n                <div>\n        <TextField\n          fullWidth=\"true\"\n          style={{ backgroundColor: \"white\" }}\n          onChange={this.handleTermChange}\n          placeholder=\"Enter A Song, Album, or Artist\"\n        />\n        <Button\n          variant=\"contained\"\n          onClick={this.search}\n          className=\"SearchButton\"\n        >\n          SEARCH\n        </Button>\n      </div>\n              </div>\n            </div>\n          </div>\n          <br></br>\n          <div\n            className=\"row\"\n            style={{\n              backgroundImage: \"url('./images/wood2-opt.jpg')\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              WebkitBackgroundSize: \"cover\",\n              MozBackgroundSize: \"cover\",\n              OBackgroundSize: \"cover\",\n            }}\n          >\n            <div className=\"grid-x align-center\">\n              <div className=\"cell medium-8 text-center\">\n                <Typography variant=\"h3\">Search Results</Typography>\n               \n              </div>\n            </div>\n          </div>\n          <br></br>\n          <div\n            className=\"row\"\n            style={{\n              backgroundImage: \"url('./images/wood3-opt.jpg')\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"cover\",\n              backgroundRepeat: \"no-repeat\",\n              WebkitBackgroundSize: \"cover\",\n              MozBackgroundSize: \"cover\",\n              OBackgroundSize: \"cover\",\n            }}\n          >\n            <div className=\"grid-x align-center\">\n              <div className=\"cell medium-8 text-center\">\n                <Typography variant=\"h3\">Playlist Creator</Typography>\n           \n              </div>\n            </div>\n          </div>\n        </article>\n\n        <div\n          className=\"sticky-footer fluid text-center\"\n          style={{\n            backgroundColor: \"black\",\n            backgroundImage: \"url('../images/spotify_Logo_RGB_White.png')\",\n            width: \"100%\",\n            height: \"250px\",\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-repeat\",\n          }}\n        > \n        <Button onClick={this.handleLogOut} variant=\"contained\">\n        Logout </Button>\n          </div> \n        \n      </div>\n    );\n  }\n}\n\nexport default User;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction TopNav() {\n  // We'll go into the Hooks API later, for now, we are just using some code\n  // from the react-router docs (https://reacttraining.com/react-router/web/api/Hooks/uselocation)\n  // This allows the component to check the route any time the user uses a link to navigate.\n  const location = useLocation();\n  return (\n    <div>\n      <div\n        className=\"fixed-footer-css fluid\"\n        style={{ backgroundColor: \"black\" }}\n      >\n        <div className=\"row expanded flex-dir-column\">\n          <div className=\"grid-x fluid\">\n            <div\n              className=\"cell auto\"\n              style={{\n                backgroundImage: \"url('./images/butlerL3.jpg')\",\n                backgroundPosition: \"center\",\n                backgroundSize: '100% 100%', \n                height: '550px',\n                backgroundRepeat: \"no-repeat\", \n              }}\n            >\n              {/* <img src='./images/podButler2.png' alt='Podmelier butler' style={{flex: 1,\n          width: '100%',\n          height: '100%',\n          resizeMode: 'cover'}}/> */}\n            </div>\n\n            <div\n              className=\"cell auto\"\n              style={{\n                backgroundImage: \"url('./images/BlownAway.jpg')\",\n                backgroundPosition: \"center\",\n                backgroundSize: '100% 100%', \n                height: '550px',\n                backgroundRepeat: \"no-repeat\",\n              }}\n            >\n              <div className=\"columns shrink header text-center\">\n                {/* <ul className=\"menu align-center\">\n                  <li>\n                    <Link\n                      to=\"/\"\n                      className={\n                        location.pathname === \"/\"\n                          ? \"nav-link active\"\n                          : \"nav-link\"\n                      }\n                    >\n                      Home\n                    </Link>\n                  </li>\n                  <li>\n                    <Link\n                      to=\"/user\"\n                      className={\n                        location.pathname === \"/user\"\n                          ? \"nav-link active\"\n                          : \"nav-link\"\n                      }\n                    >\n                      User\n                    </Link>\n                  </li>\n                </ul> */}\n              </div>\n            </div>\n\n            <div\n              className=\"cell auto\"\n              style={{\n                backgroundImage: \"url('./images/butlerR3.jpg')\",\n                backgroundPosition: \"center\",\n                backgroundSize: \"100% 100%\", \n                height: '550px',\n                backgroundRepeat: \"no-repeat\",\n              }}\n            >\n              {/* <img src='./images/revButler2.png' alt='Reverse butler' style={{flex: 1,\n            width: '100%',\n            height: '100%',\n            resizeMode: 'cover'}}/> */}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default TopNav;\n","import React from \"react\";\nimport \"./App.css\"; \nimport { BrowserRouter as Router, Route } from \"react-router-dom\"; \nimport Home from './pages/Home.js';\nimport User from './pages/User.js';\nimport TopNav from './components/TopNav.js'; \nimport LoginForm from './components/LoginForm'; \nimport SignupForm from './components/SignupForm';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <TopNav />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/user\" component={User} /> \n        <Route exact path=\"/login\" component={LoginForm}/> \n        <Route exact path=\"/signup\" component={SignupForm}/>\n      </div>\n    </Router>\n    );\n  }\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}